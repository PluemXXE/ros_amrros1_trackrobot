<?xml version="1.0" encoding="UTF-8"?>
<launch>

    <!-- ===================================================================================== -->
    <!-- |                      STEP 1: LAUNCH THE SIMULATION ENVIRONMENT                    | -->
    <!-- ===================================================================================== -->
    <!-- Include the Gazebo setup file. Make sure this launch file has been modified         -->
    <!-- to NOT use ros_control (no controller_spawner, no loading controllers.yaml).      -->
    <include file="$(find transbot_description)/launch/gazebo_control.launch" />


    <!-- ===================================================================================== -->
    <!-- |                  STEP 2: LAUNCH YOUR CUSTOM INVERSE KINEMATICS DRIVER             | -->
    <!-- ===================================================================================== -->
    <!-- This is the core of your custom control system. It listens to /cmd_vel and          -->
    <!-- directly commands the wheel joints in Gazebo.                                     -->
    <node name="manual_driver_node"
          pkg="xiaorkinematics"
          type="manual_driver_node"
          output="screen" />


    <!-- ===================================================================================== -->
    <!-- |                      STEP 3: LAUNCH THE KEYBOARD CONTROLLER                       | -->
    <!-- ===================================================================================== -->
    <!-- This node reads your keyboard presses and publishes them as Twist messages          -->
    <!-- to the /cmd_vel topic, which your manual_driver_node is listening to.             -->
    <!-- The 'launch-prefix' is a trick to run it in a new terminal window (gnome-terminal). -->
    <node name="teleop_twist_keyboard"
          pkg="teleop_twist_keyboard"
          type="teleop_twist_keyboard.py"
          output="screen"
          launch-prefix="gnome-terminal --" />

</launch>