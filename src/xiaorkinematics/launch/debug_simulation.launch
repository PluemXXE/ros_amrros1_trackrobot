<launch>
    <!-- ======================= Parameters & Arguments ======================= -->
    <arg name="use_gui" default="false"/> <!-- ตั้งเป็น false เพราะเราไม่น่าจะต้องใช้ GUI -->
    <param name="robot_description"
           command="$(find xacro)/xacro '$(find transbot_description)/urdf/transbot_base_only.urdf.xacro'"/>

    <!-- ======================= Robot Model & TF ======================= -->
    
    <!-- joint_state_publisher ไม่จำเป็นถ้า URDF ไม่มี joint ที่เคลื่อนไหว (เช่น ล้อ) -->
    <!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/> -->
    
    <!-- อ่าน URDF และสร้าง TF สำหรับ joint แบบ 'fixed' (เช่น base_footprint -> base_link) -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

    <!-- สร้าง TF แบบ static ด้วยมือ สำหรับเชื่อม Lidar เข้ากับหุ่นยนต์ -->
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser"
          args="0.0484 0 0.10403 0 0 0 /base_link /laser 30"/>

    <!-- ======================= Robot Drivers & Sensors ======================= -->

    <!-- รัน Node Odometry ของคุณ (จากไฟล์ move_base.cpp) -->
    <node pkg="xiaorkinematics" type="move_base_node" name="odometry_publisher_node" output="screen">
        <param name="linear_scale" value="1.0"/>
    </node>

    <!-- รัน Node สำหรับ RPLIDAR -->
    <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
        <param name="serial_baudrate" type="int" value="115200"/>
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
    </node>

    <!-- ======================= Visualization ======================= -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find transbot_description)/rviz/transbot.rviz"/>

</launch>